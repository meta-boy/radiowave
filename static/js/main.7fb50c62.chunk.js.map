{"version":3,"sources":["visualizer.js","radioStreams.js","App.js","index.js"],"names":["audio","analyser","w","h","center2D","canvas","context","imageData","data","radioStreams","name","link","mouseActive","mousePos","x","y","particles","particlesSky","setPixel","r","g","b","a","i","width","drawLine","x1","y1","x2","y2","dx","Math","abs","dy","sx","sy","err","lx","ly","e2","addParticle","z","index","particle","x2d","y2d","addParticles","array","dir","audioBufferIndex","particlesRow","random","push","onResize","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","height","fillStyle","fillRect","getImageData","mouseDownHandler","event","paused","play","pause","mouseEnterHandler","mouseLeaveHandler","mouseMoveHandler","rect","getBoundingClientRect","clientX","left","clientY","top","getMousePos","render","frequencySource","Uint8Array","frequencyBinCount","getByteFrequencyData","sortArray","l","length","particlesRowBack","j","k","scale","frequencyAdd","fov","lineColorValue","p","round","pB","sort","animate","clearImageData","putImageData","requestAnimationFrame","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","init","audioUrl","createElement","addEventListener","appendChild","getContext","getElementById","autoplay","crossOrigin","onended","remove","audioContext","AudioContext","webkitAudioContext","createAnalyser","connect","destination","smoothingTimeConstant","fftSize","createMediaElementSource","audioSetup","App","useState","streamLink","setStreamLink","isLoading","setIsLoading","useEffect","visualizer","JSON","parse","localStorage","getItem","setItem","stringify","className","controls","autoPlay","onLoadStart","onLoadedData","onError","src","id","map","stream","key","onClick","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7fb50c62.chunk.js","sourcesContent":["let audio;\nlet analyser;\n\n\nlet w;\nlet h;\n\nlet center2D;\n\nlet canvas;\nlet context;\n\nlet imageData;\nlet data;\n\nlet mouseActive = false;\nlet mousePos = { x: 0, y: 0 };\n\nlet fov = 250;\n\nlet speed = 0.5;\n\nlet particles = [];\nlet particlesSky = [];\nlet particleDistanceTop = 10;\n\n//---\n\nfunction init(audioUrl) {\n  canvas = document.createElement(\"canvas\");\n  canvas.addEventListener(\"mousedown\", mouseDownHandler, false);\n  canvas.addEventListener(\"mousemove\", mouseMoveHandler, false);\n  canvas.addEventListener(\"mouseenter\", mouseEnterHandler, false);\n  canvas.addEventListener(\"mouseleave\", mouseLeaveHandler, false);\n\n  document.body.appendChild(canvas);\n\n  context = canvas.getContext(\"2d\");\n\n  window.addEventListener(\"resize\", onResize);\n\n  onResize();\n\n  addParticles(particles, 1);\n  addParticles(particlesSky, -1);\n\n  render();\n\n  context.putImageData(imageData, 0, 0);\n  audioSetup(audioUrl);\n  animate();\n}\n\n//---\n\nfunction audioSetup(audioUrl) {\n  audio = document.getElementById(\"audio\");\n  audio.autoplay = true;\n  audio.crossOrigin = \"anonymous\";\n  audio.onended = function () {\n    audio.remove(); //remove after playing to clean the Dom\n  };\n\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n  analyser = audioContext.createAnalyser();\n  analyser.connect(audioContext.destination);\n  analyser.smoothingTimeConstant = 0.75;\n  analyser.fftSize = 512 * 32; //circleSegments * 32;\n  const audioSrc = audioContext.createMediaElementSource(audio);\n  audioSrc.connect(analyser);\n}\n\n//---\n\nfunction clearImageData() {\n  for (let i = 0, l = data.length; i < l; i += 4) {\n    data[i] = 0;\n    data[i + 1] = 0;\n    data[i + 2] = 0;\n    data[i + 3] = 255;\n  }\n}\n\nfunction setPixel(x, y, r, g, b, a) {\n  let i = (x + y * imageData.width) * 4;\n\n  data[i] = r;\n  data[i + 1] = g;\n  data[i + 2] = b;\n  data[i + 3] = a;\n}\n\n//---\n\nfunction drawLine(x1, y1, x2, y2, r, g, b, a) {\n  let dx = Math.abs(x2 - x1);\n  let dy = Math.abs(y2 - y1);\n\n  let sx = x1 < x2 ? 1 : -1;\n  let sy = y1 < y2 ? 1 : -1;\n\n  let err = dx - dy;\n\n  let lx = x1;\n  let ly = y1;\n\n  while (true) {\n    if (lx > 0 && lx < w && ly > 0 && ly < h) {\n      setPixel(lx, ly, r, g, b, a);\n    }\n\n    if (lx === x2 && ly === y2) break;\n\n    let e2 = 2 * err;\n\n    if (e2 > -dx) {\n      err -= dy;\n      lx += sx;\n    }\n\n    if (e2 < dy) {\n      err += dx;\n      ly += sy;\n    }\n  }\n}\n\n//---\n\nfunction addParticle(x, y, z, index) {\n  let particle = {};\n  particle.x = x;\n  particle.y = y;\n  particle.z = z;\n  particle.x2d = 0;\n  particle.y2d = 0;\n  particle.index = index;\n\n  return particle;\n}\n\nfunction addParticles(array, dir) {\n  let audioBufferIndexMin = 8;\n  let audioBufferIndexMax = 512;\n  let audioBufferIndex = audioBufferIndexMin;\n\n  for (let z = -fov; z < fov; z += 5) {\n    let particlesRow = [];\n\n    for (let x = -fov; x < fov; x += 5) {\n      let yPos = 0;\n\n      if (dir > 0) {\n        yPos = Math.random() * 5 + particleDistanceTop;\n      } else {\n        yPos = Math.random() * 5 - particleDistanceTop;\n      }\n\n      let particle = addParticle(x, yPos, z, audioBufferIndex);\n\n      particlesRow.push(particle);\n\n      audioBufferIndex++;\n\n      if (audioBufferIndex > audioBufferIndexMax) {\n        audioBufferIndex = audioBufferIndexMin;\n      }\n    }\n\n    array.push(particlesRow);\n  }\n}\n\n//---\n\nfunction onResize() {\n  w =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n  h =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    document.body.clientHeight;\n\n  center2D = { x: w / 2, y: h / 2 };\n\n  canvas.width = w;\n  canvas.height = h;\n\n  context.fillStyle = \"#000000\";\n  context.fillRect(0, 0, w, h);\n\n  imageData = context.getImageData(0, 0, w, h);\n  data = imageData.data;\n}\n\n//---\n\nfunction mouseDownHandler(event) {\n  if (audio.paused) {\n    audio.play();\n  } else {\n    audio.pause();\n  }\n}\n\nfunction mouseEnterHandler(event) {\n  mouseActive = true;\n}\n\nfunction mouseLeaveHandler(event) {\n  mouseActive = false;\n\n  mousePos.x = w / 2;\n}\n\nfunction mouseMoveHandler(event) {\n  mousePos = getMousePos(canvas, event);\n}\n\nfunction getMousePos(canvas, event) {\n  let rect = canvas.getBoundingClientRect();\n\n  return { x: event.clientX - rect.left, y: event.clientY - rect.top };\n}\n\n//---\n\nfunction render() {\n  let frequencySource;\n\n  if (analyser) {\n    frequencySource = new Uint8Array(analyser.frequencyBinCount);\n\n    analyser.getByteFrequencyData(frequencySource);\n  }\n\n  //---\n\n  let sortArray = false;\n\n  //---\n\n  for (let i = 0, l = particles.length; i < l; i++) {\n    let particlesRow = particles[i];\n    let particlesRowBack;\n\n    if (i > 0) {\n      particlesRowBack = particles[i - 1];\n    }\n\n    for (let j = 0, k = particlesRow.length; j < k; j++) {\n      let particle = particlesRow[j];\n\n      let scale = fov / (fov + particle.z);\n\n      particle.x2d = particle.x * scale + center2D.x;\n      particle.y2d = particle.y * scale + center2D.y;\n\n      //---\n\n      particle.z -= speed;\n\n      if (analyser) {\n        let frequency = frequencySource[particle.index];\n        let frequencyAdd = frequency / 10;\n\n        particle.y = frequencyAdd + particleDistanceTop;\n      }\n\n      if (particle.z < -fov) {\n        particle.z += fov * 2;\n\n        sortArray = true;\n      }\n\n      //---\n\n      let lineColorValue;\n\n      if (j > 0) {\n        let p = particlesRow[j - 1];\n\n        lineColorValue = Math.round((i / l) * 155); //255\n\n        drawLine(\n          particle.x2d | 0,\n          particle.y2d | 0,\n          p.x2d | 0,\n          p.y2d | 0,\n          0,\n          lineColorValue,\n          0,\n          255\n        );\n      }\n\n      if (i > 0 && i < l - 1) {\n        let pB = particlesRowBack[j];\n\n        drawLine(\n          particle.x2d | 0,\n          particle.y2d | 0,\n          pB.x2d | 0,\n          pB.y2d | 0,\n          0,\n          lineColorValue,\n          0,\n          255\n        );\n      }\n    }\n  }\n\n  //---\n\n  if (sortArray) {\n    particles = particles.sort(function (a, b) {\n      //return ( b[ 0 ].z === a[ 0 ].z ? 0 : ( b[ 0 ].z < a[ 0 ].z ? -1 : 1 ) );\n      return b[0].z - a[0].z;\n    });\n  }\n\n  //---\n\n  for (let i = 0, l = particlesSky.length; i < l; i++) {\n    let particlesRow = particlesSky[i];\n    let particlesRowBack;\n\n    if (i > 0) {\n      particlesRowBack = particlesSky[i - 1];\n    }\n\n    for (let j = 0, k = particlesRow.length; j < k; j++) {\n      let particle = particlesRow[j];\n\n      let scale = fov / (fov + particle.z);\n\n      particle.x2d = particle.x * scale + center2D.x;\n      particle.y2d = particle.y * scale + center2D.y;\n\n      //---\n\n      particle.z -= speed;\n\n      if (analyser) {\n        let frequency = frequencySource[particle.index];\n        let frequencyAdd = frequency / 10; //circle.frequencyFactor;\n\n        particle.y = -frequencyAdd - particleDistanceTop;\n      }\n\n      if (particle.z < -fov) {\n        particle.z += fov * 2;\n\n        sortArray = true;\n      }\n\n      //---\n\n      let lineColorValue;\n\n      if (j > 0) {\n        let p = particlesRow[j - 1];\n\n        lineColorValue = Math.round((i / l) * 255); //255\n\n        drawLine(\n          particle.x2d | 0,\n          particle.y2d | 0,\n          p.x2d | 0,\n          p.y2d | 0,\n          0,\n          Math.round(lineColorValue / 2),\n          lineColorValue,\n          255\n        );\n      }\n\n      if (i > 0 && i < l - 1) {\n        let pB = particlesRowBack[j];\n\n        // v1 = { x:particle.x2d | 0, y:particle.y2d | 0 };\n        // v2 = { x:pB.x2d | 0, y:pB.y2d | 0 };\n\n        //let lineColorValue = Math.round( ( ( i - ( fov / 5 ) ) / l ) * 255 );\n\n        //drawLine( v1, v2, lineColorValue, lineColorValue, lineColorValue, 255 );\n        drawLine(\n          particle.x2d | 0,\n          particle.y2d | 0,\n          pB.x2d | 0,\n          pB.y2d | 0,\n          0,\n          Math.round(lineColorValue / 2),\n          lineColorValue,\n          255\n        );\n      }\n    }\n  }\n\n  //---\n\n  if (sortArray) {\n    particlesSky = particlesSky.sort(function (a, b) {\n      return b[0].z - a[0].z;\n    });\n  }\n\n  //---\n\n  if (mouseActive) {\n    center2D.x += (mousePos.x - center2D.x) * 0.015;\n  } else {\n    center2D.x += (canvas.width / 2 - center2D.x) * 0.015;\n  }\n}\n\n//---\n\nfunction animate() {\n  clearImageData();\n\n  render();\n\n  context.putImageData(imageData, 0, 0);\n\n  requestAnimationFrame(animate);\n}\n\nwindow.requestAnimFrame = (function () {\n  return (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    function (callback) {\n      window.setTimeout(callback, 1000 / 60);\n    }\n  );\n})();\n\n//---\n\nexport default init;\n","export const radioStreams = [\n  {\n    name: \"Radiorecord.ru\",\n    link: \"https://air.radiorecord.ru:805/synth_320\",\n  },\n  {\n    name: \"Nightride.fm\",\n    link: \"https://stream.nightride.fm/nightride.m4a\",\n  },\n  {\n    name: \"Synthwave.hu\",\n    link: \"https://ecast.myautodj.com/public1channel\",\n  },\n  {\n    name: \"Laut.fm\",\n    link: \"https://nightdrive.stream.laut.fm/nightdrive\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport { radioStreams } from \"./radioStreams\";\nimport visualizer from \"./visualizer\";\n\nfunction App() {\n  const [streamLink, setStreamLink] = useState(radioStreams[0].link);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    visualizer();\n  }, []);\n\n  useEffect(() => {\n    const streamLink = JSON.parse(localStorage.getItem(\"streamLink\"));\n    if (streamLink) {\n      setStreamLink(streamLink);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"streamLink\", JSON.stringify(streamLink));\n  }, [streamLink]);\n\n  return (\n    <>\n      <div className=\"gif\">\n        <h1>【ｒａｄｉｏｗａｖｅ】</h1>\n        <p>A minimal synthwave radio</p>\n        <audio\n          controls\n          autoPlay\n          onLoadStart={() => setIsLoading(true)}\n          onLoadedData={() => setIsLoading(false)}\n          onError={() => setStreamLink(radioStreams[1].link)}\n          src={streamLink}\n          id=\"audio\"\n        />\n\n        <div className=\"stream-btns\">\n          {radioStreams.map((stream, i) => (\n            <button\n              key={i}\n              className={`btn ${streamLink === stream.link && \"active\"}`}\n              onClick={() => setStreamLink(stream.link)}\n            >\n              {stream.name}\n            </button>\n          ))}\n        </div>\n      </div>\n      {isLoading && <div className=\"lds-dual-ring\"></div>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}